{"version":3,"sources":["Movies.js","App.js","index.js"],"names":["RenderMovie","title","url","summary","rating","genres","className","src","slice","map","genre","itemNo","key","App","props","state","isLoading","movies","getMovies","a","console","log","axios","get","result","data","setState","this","movie","id","large_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gTAuBeA,MAbf,YAA8D,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,IAAaC,GAAkB,EAA1BC,OAA0B,EAAlBD,SAASE,EAAS,EAATA,OAChD,OACI,yBAAKC,UAAU,SACX,yBAAKC,IAAKL,EAAKD,MAAOA,IACtB,uBAAGK,UAAU,SAAUL,GACvB,2BAAIE,EAAQK,MAAM,EAAE,KAApB,OACA,wBAAIF,UAAU,UACTD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAAmB,wBAAIC,IAAKD,GAASD,SC2BlDG,G,wDAzBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAbRC,MAAQ,CACNC,WAAY,EACZC,OAAS,CAAC,CAAChB,MAAM,UAUA,EAPnBiB,UAOmB,sBAPP,4BAAAC,EAAA,6DACVC,QAAQC,IAAI,aADF,SAEWC,IAAMC,IAAI,6CAFrB,OAEJC,EAFI,OAGRJ,QAAQC,IAAIG,EAAOC,KAAKA,KAAKR,QAC/B,EAAKS,SAAS,CAACV,WAAU,EAAOC,OAASO,EAAOC,KAAKA,KAAKR,SAJhD,2CAUVG,QAAQC,IAAI,eAHK,E,gEAMjBD,QAAQC,IAAI,kBACZM,KAAKT,c,2CAILE,QAAQC,IAAI,qB,+BAMZ,OAFAD,QAAQC,IAAI,mBAGV,yBAAKf,UAAU,UACZqB,KAAKZ,MAAMC,UAAY,aAAeW,KAAKZ,MAAME,OAAOR,KAAI,SAAAmB,GAAK,OAAI,kBAAC,EAAD,CAAahB,IAAKgB,EAAMC,GAAI5B,MAAO2B,EAAM3B,MAAOC,IAAK0B,EAAME,kBAAmB1B,OAAQwB,EAAMxB,OAAQD,QAASyB,EAAMzB,QAASE,OAAQuB,EAAMvB,iB,GAhCtM0B,IAAMC,YCAxBC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.c0a98646.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Movie.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nRenderMovie.propTypes = {\r\n    title : PropTypes.string.isRequired\r\n}\r\n\r\n\r\n\r\nfunction RenderMovie({ title, url, rating, summary, genres }){\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={url} title={title}></img>\r\n            <a className=\"title\">{ title }</a>\r\n            <p>{summary.slice(0,140)}...</p>\r\n            <ul className=\"genres\">\r\n                {genres.map((genre, itemNo) => <li key={itemNo}>{genre}</li> )}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RenderMovie;","import React from 'react';\nimport axios from 'axios';\nimport RenderMovie from './Movies';\nimport './App.css';\nimport './Movie.css'\n\nclass App extends React.Component{\n  state = {\n    isLoading : true,\n    movies : [{title:'test'}]\n  };\n\n  getMovies = async() => {\n    console.log('getMovies');\n    const result = await axios.get('https://yts-proxy.now.sh/list_movies.json');\n      console.log(result.data.data.movies);\n    this.setState({isLoading:false, movies : result.data.data.movies})\n  }\n\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    console.log(\"Constructor\");\n  }\n  componentDidMount(){\n    console.log(\"componet Mount\");\n    this.getMovies();\n  }\n\n  componentDidUpdate(){\n    console.log(\"componet Update\");\n  }\n\n  render(){ \n    console.log(\"componet Render\");\n\n    return(\n      <div className=\"movies\">\n        {this.state.isLoading ? \"Loading...\" : this.state.movies.map(movie => <RenderMovie key={movie.id} title={movie.title} url={movie.large_cover_image} rating={movie.rating} summary={movie.summary} genres={movie.genres} />)}\n      </div>      \n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n/*\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n*/"],"sourceRoot":""}